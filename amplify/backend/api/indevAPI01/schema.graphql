# STANDARD TABLES
type Channel @model {
  id: ID!
  name: String!
  manager: User @connection
  supporters: [String]
  description: String
  category: String
  operator: String 
  target: Int
  projects: [Project] @connection(name: "ProjectsToChannel")
  featuredImg: S3Object
}

type User @model
  # @auth(rules: [
  #   {allow: groups, groups: ["Admin"] },
  #   {allow: owner, ownerField: "username", operations: [read] }
  # ])
{
  id: ID!
  firstName: String
  lastName: String
  username: String
  displayName: String
  canHire: Boolean
  email: String
  supporting: [Channel]
  developing: [Project]
  channel: Channel @connection
  role: String
}

type Project @model {
  id: ID!
  name: String!
  channel: Channel @connection(name: "ProjectsToChannel")
  channelID: String!
  manager: User @connection
  developers: [User]
  description: String
  category: String
  featuredImg: String
  startDate: String
  endDate: String
  devStage: String
  showcase: Showcase @connection
  updates: [Update] @connection(name: "ProjectUpdate")
}

type Update
  @model
  @key(name: "byProject", fields: ["projectID"], queryField: "UpdatesByProject") {
  id: ID!
  project: Project @connection(name: "ProjectUpdate")
  projectID: String!
  author: User @connection
  name: String!
  short: String
  content: String
  format: [String]
  coverImg: S3Object
}

type Showcase @model {
  id: ID!
  title: String
  manager: String
  managerID: String
  videos: AWSJSON
}

# DATA TYPES
type S3Object {
  bucket: String!
  key: String!
  region: String!
}